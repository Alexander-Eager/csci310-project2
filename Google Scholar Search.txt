Google Scholar using scholar.py

<?php

// input vars
$searchTerms = "";
$numberOfResults = 10;

// search by title and author separately
$authorHandle = popen('scholar.py -c $numberOfResults --author "$searchTerms"', "");
$titleHandle = popen('scholar.py -c $numberOfResults --phrase "$searchTerms"', "");

// the output, as formatted by scholar.py https://github.com/ckreibich/scholar.py
$authorOutput = file_get_contents($authorHandle);
$titleOutput = file_get_contents($titleHandle);

// separating individual articles
$authorArticles = explode("\n\n", $authorOutput);
$titleArticles = explode("\n\n", $titleOutput);

// going through, getting out the articles we will use
$i = 0;
$authorLen = count($authorArticles), $titleLen = count($titleArticles);
$articlesWeWillUse = array();
$numArticlesTaken = 0;
while ($numArticlesTaken < $numberOfResults) {
	// potentially change to article id later
	if ($i < $authorLen && !in_array($authorArticles[$i], $articlesWeWillUse)) {
		$articlesWeWillUse[] = $authorArticles[$i];
		$numArticlesTaken ++;
	}
	if ($numArticlesTaken < $numberOfResults &&
		$i < $titleLen && !in_array($titleArticles[$i], $articlesWeWillUse)) {
		$articlesWeWillUse[] = $titleArticles[$i];
		$numArticlesTaken ++;
	}
	$i ++;
	if ($i >= $authorLen && $i >= $titleLen) {
		break;
	}
}

for ($i = 0; $i < $numArticlesTaken; $i ++) {
	echo $articlesWeWillUse[$i];
	echo "\n";
}

?>